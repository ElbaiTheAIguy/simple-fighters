<!DOCTYPE html>
<html>
<head>
<title>Simple 2 Player Fighter</title>
<style>
  body {
    background-color: black;
    font-family: sans-serif;
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
  }

  .game-container {
    position: relative;
    width: 600px;
    height: 400px;
    border: 1px solid #555;
    margin-top: 20px;
  }

  .player {
    position: absolute;
    width: 50px;
    height: 80px;
    background-color: blue;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #player1 {
    left: 50px;
  }

  #player2 {
    right: 50px;
    background-color: red;
  }

  .health-bar-container {
    display: flex;
    gap: 20px;
    margin-top: 20px;
  }

  .health-bar {
    width: 150px;
    height: 15px;
    background-color: #333;
  }

  .health {
    background-color: green;
    height: 100%;
    width: 100%;
  }

  .player-info {
    text-align: center;
  }

  .controls {
    margin-top: 20px;
    text-align: center;
  }

  #game-over {
    margin-top: 30px;
    font-size: 1.2em;
    text-align: center;
  }

  #restart-button {
    padding: 10px 20px;
    font-size: 1em;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    margin-top: 10px;
    display: none; /* Initially hidden */
  }
</style>
</head>
<body>
  <h1>Simple 2 Player Fighter</h1>

  <div class="health-bar-container">
    <div class="player-info">
      <h2>Player 1</h2>
      <div class="health-bar">
        <div id="player1-health" class="health"></div>
      </div>
      <p>HP: <span id="player1-hp">100</span></p>
      <p>Controls: WASD (Move), E (Punch)</p>
    </div>

    <div class="player-info">
      <h2>Player 2</h2>
      <div class="health-bar">
        <div id="player2-health" class="health"></div>
      </div>
      <p>HP: <span id="player2-hp">100</span></p>
      <p>Controls: Arrow Keys (Move), Shift (Punch)</p>
    </div>
  </div>

  <div class="game-container">
    <div id="player1" class="player"></div>
    <div id="player2" class="player"></div>
  </div>

  <div id="game-over"></div>
  <button id="restart-button">Restart Game</button>

  <script>
    const player1Element = document.getElementById('player1');
    const player2Element = document.getElementById('player2');
    const player1HpElement = document.getElementById('player1-hp');
    const player2HpElement = document.getElementById('player2-hp');
    const player1HealthBar = document.getElementById('player1-health');
    const player2HealthBar = document.getElementById('player2-health');
    const gameOverElement = document.getElementById('game-over');
    const restartButton = document.getElementById('restart-button');
    const gameContainer = document.querySelector('.game-container');

    let player1Hp;
    let player2Hp;
    let player1X;
    let player2X;
    const playerSpeed = 5;
    const playerWidth = 50;

    function resetGame() {
      player1Hp = 100;
      player2Hp = 100;
      player1X = 50;
      player2X = gameContainer.offsetWidth - 50 - playerWidth;

      player1Element.style.left = player1X + 'px';
      player1Element.style.top = '50%';
      player2Element.style.left = player2X + 'px';
      player2Element.style.top = '50%';

      updateHealth(1);
      updateHealth(2);

      gameOverElement.textContent = '';
      restartButton.style.display = 'none';
    }

    resetGame(); // Initialize the game

    document.addEventListener('keydown', function(event) {
      // Player 1 Controls
      if (event.key === 'w') {
        const newTop = parseInt(player1Element.style.top) - playerSpeed;
        if (newTop >= 0 && newTop <= gameContainer.offsetHeight - 80) {
          player1Element.style.top = newTop + 'px';
        }
      } else if (event.key === 's') {
        const newTop = parseInt(player1Element.style.top) + playerSpeed;
        if (newTop >= 0 && newTop <= gameContainer.offsetHeight - 80) {
          player1Element.style.top = newTop + 'px';
        }
      } else if (event.key === 'a') {
        const newLeft = player1X - playerSpeed;
        if (newLeft >= 0) {
          player1X = newLeft;
          player1Element.style.left = player1X + 'px';
        }
      } else if (event.key === 'd') {
        const newLeft = player1X + playerSpeed;
        if (newLeft <= player2X - playerWidth - 5) {
          player1X = newLeft;
          player1Element.style.left = player1X + 'px';
        }
      } else if (event.key === 'e') {
        punch(1);
      }

      // Player 2 Controls
      if (event.key === 'ArrowUp') {
        const newTop = parseInt(player2Element.style.top) - playerSpeed;
        if (newTop >= 0 && newTop <= gameContainer.offsetHeight - 80) {
          player2Element.style.top = newTop + 'px';
        }
      } else if (event.key === 'ArrowDown') {
        const newTop = parseInt(player2Element.style.top) + playerSpeed;
        if (newTop >= 0 && newTop <= gameContainer.offsetHeight - 80) {
          player2Element.style.top = newTop + 'px';
        }
      } else if (event.key === 'ArrowLeft') {
        const newLeft = player2X - playerSpeed;
        if (newLeft >= player1X + playerWidth + 5) {
          player2X = newLeft;
          player2Element.style.left = player2X + 'px';
        }
      } else if (event.key === 'ArrowRight') {
        const newLeft = player2X + playerSpeed;
        if (newLeft <= gameContainer.offsetWidth - playerWidth) {
          player2X = newLeft;
          player2Element.style.left = player2X + 'px';
        }
      } else if (event.key === 'Shift') {
        punch(2);
      }
    });

    function punch(player) {
      if (player === 1) {
        if (Math.abs(player1X - player2X) < 60) {
          if (player2Hp > 0) {
            player2Hp -= 5;
            updateHealth(2);
            checkGameOver();
          }
        }
      } else if (player === 2) {
        if (Math.abs(player2X - player1X) < 60) {
          if (player1Hp > 0) {
            player1Hp -= 5;
            updateHealth(1);
            checkGameOver();
          }
        }
      }
    }

    function updateHealth(player) {
      const hpElement = player === 1 ? player1HpElement : player2HpElement;
      const healthBar = player === 1 ? player1HealthBar : player2HealthBar;
      const hp = player === 1 ? player1Hp : player2Hp;

      hpElement.textContent = hp;
      healthBar.style.width = hp + '%';
      healthBar.style.backgroundColor = hp <= 30 ? 'red' : 'green';
    }

    function checkGameOver() {
      if (player1Hp <= 0) {
        gameOver('Player 2 Wins!');
      } else if (player2Hp <= 0) {
        gameOver('Player 1 Wins!');
      }
    }

    function gameOver(message) {
      gameOverElement.textContent = message;
      restartButton.style.display = 'block';
    }

    restartButton.addEventListener('click', resetGame);

    window.addEventListener('load', () => {
      player2X = gameContainer.offsetWidth - 50 - playerWidth;
      player2Element.style.left = player2X + 'px';
    });

    window.addEventListener('resize', () => {
      player2X = gameContainer.offsetWidth - 50 - playerWidth;
      player2Element.style.left = player2X + 'px';
    });
  </script>
</body>
</html>
